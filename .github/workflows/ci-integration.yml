name: CI/CD - Marketing Automation Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-shared:
    name: Test Shared Package
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-shared-${{ hashFiles('shared/pyproject.toml') }}
      
      - name: Install shared package
        run: |
          cd shared
          pip install -e .[dev]
      
      - name: Test imports
        run: |
          python -c "from marketing_shared.schemas.facebook_metrics import CampaignMetricSchema; print('✅ Schemas OK')"
          python -c "from marketing_shared.utils.api_client import AgentAPIClient; print('✅ Client OK')"

  test-api:
    name: Test Agent API
    runs-on: ubuntu-latest
    needs: test-shared
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install shared package
        run: pip install -e ./shared
      
      - name: Install API dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run API tests
        env:
          DATABASE_URL: postgresql://postgres:test_password@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY: test_secret_key_min_32_characters_long
          ANALYTICS_API_KEY: test_analytics_key
        run: |
          cd backend
          pytest tests/ -v --cov=src --cov-report=xml || true

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test-api]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install shared package
        run: pip install -e ./shared
      
      - name: Install dependencies
        run: pip install pytest requests
      
      - name: Run integration tests
        run: pytest tests/integration/ -v

  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install linting tools
        run: pip install black
      
      - name: Check formatting with Black
        run: black --check shared/marketing_shared/ backend/src/ analytics/scripts/ || true

