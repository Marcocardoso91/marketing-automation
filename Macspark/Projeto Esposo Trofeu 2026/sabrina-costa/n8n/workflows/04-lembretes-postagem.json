{
  "name": "Sabrina_04_LembretesPostagem",
  "active": false,
  "id": "sabrina-04-lembretes-postagem",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 11,
              "minute": 0
            },
            {
              "hour": 17,
              "minute": 30
            }
          ]
        }
      },
      "name": "Cron - 11h & 17h30",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        200,
        280
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "={{$env.API_BASE_URL}}/api/schedule?date={{$now.format('YYYY-MM-DD')}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$env.API_TOKEN || ''}}"
            },
            {
              "name": "X-Webhook-Token",
              "value": "={{$env.WEBHOOK_SECRET}}"
            }
          ]
        }
      },
      "name": "Buscar Cronograma Hoje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        420,
        280
      ]
    },
    {
      "parameters": {
        "functionCode": "const posts = $json.data || [];\nconst now = new Date();\nconst windowMinutes = 120;\n\nconst filtered = posts.filter((post) => {\n  if (post.status !== 'planned') return false;\n  const postDate = new Date(`${post.date}T11:00:00Z`);\n  const diff = (postDate - now) / (1000 * 60);\n  return diff >= 0 && diff <= windowMinutes;\n});\n\nreturn [{ json: { posts: filtered, count: filtered.length } }];"
      },
      "name": "Filtrar Pr√≥ximos 120min",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        640,
        280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.count}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "name": "Tem Posts?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        860,
        280
      ]
    },
    {
      "parameters": {
        "functionCode": "return ($json.posts || []).map(post => ({ json: post }));"
      },
      "name": "Preparar Lista",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1080,
        180
      ]
    },
    {
      "parameters": {
        "batchSize": 1
      },
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        1280,
        180
      ]
    },
    {
      "parameters": {
        "functionCode": "const post = $json;\nconst date = new Date(post.date).toLocaleDateString('pt-BR');\nconst formatLabel = {\n  reel: 'Reels',\n  carousel: 'Carrossel',\n  stories: 'Stories'\n}[post.format] || post.format;\n\nconst message = `üé¨ *LEMBRETE DE POSTAGEM*\\n\\nüìÖ Data: ${date}\\nüì± Formato: ${formatLabel}\\nüéØ Tema: ${post.theme}\\n\\nüí° Gancho:\\n\"${post.hook || 'Definir gancho final'}\"\\n\\n‚úçÔ∏è CTA:\\n\"${post.cta || 'Adicionar CTA'}\"\\n\\nüìù Stories complementares:\\n${post.storiesIdeas || 'Planejar stories complementares.'}\\n\\n---\\n‚úÖ Marcar como conclu√≠do: ${$env.DASHBOARD_URL || 'https://dashboard-sabrina.vercel.app'}/cronograma.html`;\n\nreturn [{ json: { message, post } }];"
      },
      "name": "Formatar Lembrete",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1480,
        180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.EVOLUTION_API_URL}}/message/sendText/{{$env.WHATSAPP_INSTANCE}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$env.EVOLUTION_API_KEY}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonBody": "={\n  \"number\": \"{{$env.WHATSAPP_NUMBER}}\",\n  \"text\": $json.message\n}",
        "sendBody": true,
        "options": {
          "timeout": 8000
        }
      },
      "name": "Enviar WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1680,
        180
      ]
    },
    {
      "parameters": {
        "functionCode": "return [{ json: { status: 'sem-posts', info: 'Nenhum post previsto nas pr√≥ximas 2h.' } }];"
      },
      "name": "Registrar Sem Posts",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1080,
        420
      ]
    }
  ],
  "connections": {
    "Cron - 11h & 17h30": {
      "main": [
        [
          {
            "node": "Buscar Cronograma Hoje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Cronograma Hoje": {
      "main": [
        [
          {
            "node": "Filtrar Pr√≥ximos 120min",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar Pr√≥ximos 120min": {
      "main": [
        [
          {
            "node": "Tem Posts?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem Posts?": {
      "main": [
        [
          {
            "node": "Registrar Sem Posts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Preparar Lista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Lista": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "Formatar Lembrete",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar Lembrete": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "regular"
  },
  "meta": {
    "template": "docs/N8N-WORKFLOWS.md#workflow-4-lembretes-de-postagem"
  },
  "tags": [
    "Sabrina",
    "Lembretes"
  ]
}
