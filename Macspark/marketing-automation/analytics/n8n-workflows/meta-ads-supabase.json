{
  "name": "Meta Ads → Supabase + Notion - Métricas Diárias",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "45 9 * * *"
            }
          ]
        }
      },
      "name": "Schedule Trigger - Diário 9:45h",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "id": "schedule-meta-trigger"
    },
    {
      "parameters": {
        "url": "={{$env.AGENT_API_URL}}/api/v1/metrics/export",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key",
              "value": "={{$env.ANALYTICS_API_KEY}}"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$today.minus({days: 1}).toFormat('yyyy-MM-dd')}}"
            },
            {
              "name": "date_until",
              "value": "={{$today.minus({days: 1}).toFormat('yyyy-MM-dd')}}"
            }
          ]
        },
        "options": {
          "timeout": 30000,
          "retry": {
            "maxRetries": 3,
            "waitBetweenRetries": 1000
          }
        }
      },
      "name": "Agent API - Buscar Métricas",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 300],
      "id": "agent-api-fetch"
    },
    {
      "parameters": {
        "jsCode": "// Processar dados do Agent API\n// Response format: { campaigns: [], total_campaigns, date_from, date_until, exported_at, data_source }\nconst apiResponse = items[0].json;\nconst campaigns = apiResponse.campaigns || [];\n\n// Validar fonte de dados\nif (apiResponse.data_source !== 'facebook-ads-ai-agent') {\n  throw new Error(`Fonte de dados inválida: ${apiResponse.data_source}`);\n}"\n\n// Agregar métricas\nlet totalSpend = 0;\nlet totalImpressions = 0;\nlet totalReach = 0;\nlet totalClicks = 0;\nlet totalFrequency = 0;\nlet totalFollowers = 0;\n\nfor (const campaign of campaigns) {\n  totalSpend += parseFloat(campaign.spend || 0);\n  totalImpressions += parseInt(campaign.impressions || 0);\n  totalReach += parseInt(campaign.reach || 0);\n  totalClicks += parseInt(campaign.clicks || 0);\n  totalFrequency += parseFloat(campaign.frequency || 0);\n  \n  // Buscar actions (follow, save, etc)\n  if (campaign.actions) {\n    for (const action of campaign.actions) {\n      if (action.action_type === 'follow' || \n          action.action_type === 'onsite_conversion.post_save') {\n        totalFollowers += parseInt(action.value || 0);\n      }\n    }\n  }\n}\n\n// Calcular métricas derivadas\nconst avgCtr = totalImpressions > 0 ? (totalClicks / totalImpressions) * 100 : 0;\nconst avgCpc = totalClicks > 0 ? totalSpend / totalClicks : 0;\nconst avgCpe = totalFollowers > 0 ? totalSpend / totalFollowers : 0;\nconst avgFrequency = campaigns.length > 0 ? totalFrequency / campaigns.length : 0;\nconst costPerFollower = totalFollowers > 0 ? totalSpend / totalFollowers : 0;\nconst cpm = totalImpressions > 0 ? (totalSpend / totalImpressions) * 1000 : 0;\n\n// Data de ontem\nconst yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nconst dataFormatted = yesterday.toISOString().split('T')[0];\n\n// Retornar dados para Supabase E Notion\nreturn [{\n  json: {\n    // Para Supabase\n    supabase: {\n      data: dataFormatted,\n      source: 'meta_ads',\n      spend: parseFloat(totalSpend.toFixed(2)),\n      reach: totalReach,\n      impressions: totalImpressions,\n      frequency: parseFloat(avgFrequency.toFixed(2)),\n      clicks: totalClicks,\n      ctr: parseFloat(avgCtr.toFixed(2)),\n      cpc: parseFloat(avgCpc.toFixed(2)),\n      cpe: parseFloat(avgCpe.toFixed(2)),\n      cpm: parseFloat(cpm.toFixed(2)),\n      conversions: totalFollowers,\n      cost_per_conversion: parseFloat(costPerFollower.toFixed(2)),\n      new_followers: totalFollowers,\n      cost_per_follower: parseFloat(costPerFollower.toFixed(2)),\n      notes: `Meta Ads: ${campaigns.length} campanhas, ${totalClicks} cliques, ${totalReach} alcance`,\n      raw_data: campaigns\n    },\n    // Para Notion\n    notion: {\n      data: dataFormatted,\n      gastoAds: parseFloat(totalSpend.toFixed(2)),\n      alcance: totalReach,\n      ctr: parseFloat(avgCtr.toFixed(2)),\n      cpc: parseFloat(avgCpc.toFixed(2)),\n      cpe: parseFloat(avgCpe.toFixed(2)),\n      frequencia: parseFloat(avgFrequency.toFixed(2)),\n      novosSeguidores: totalFollowers,\n      custoPorSeguidor: parseFloat(costPerFollower.toFixed(2)),\n      notas: `${campaigns.length} campanhas ativas`\n    }\n  }\n}];"
      },
      "name": "Process Meta Ads Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300],
      "id": "code-process-meta"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.SUPABASE_URL}}/rest/v1/daily_metrics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$env.SUPABASE_ANON_KEY}}"
            },
            {
              "name": "Authorization",
              "value": "Bearer ={{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json.supabase) }}",
        "options": {}
      },
      "name": "Supabase - Insert Metrics",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [850, 200],
      "id": "supabase-insert-meta"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": "={{$env.NOTION_DATABASE_ID}}",
        "title": "={{$json.notion.data}}",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Data",
              "textValue": "={{$json.notion.data}}"
            },
            {
              "key": "Gasto Ads (R$)",
              "numberValue": "={{$json.notion.gastoAds}}"
            },
            {
              "key": "Alcance",
              "numberValue": "={{$json.notion.alcance}}"
            },
            {
              "key": "CTR (%)",
              "numberValue": "={{$json.notion.ctr}}"
            },
            {
              "key": "Novos Seguidores",
              "numberValue": "={{$json.notion.novosSeguidores}}"
            }
          ]
        }
      },
      "name": "Notion - Insert Record",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "position": [850, 400],
      "id": "notion-insert-meta",
      "credentials": {
        "notionApi": "Notion API"
      }
    },
    {
      "parameters": {},
      "name": "Success",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1050, 300],
      "id": "success-node-meta"
    }
  ],
  "connections": {
    "Schedule Trigger - Diário 9:45h": {
      "main": [
        [
          {
            "node": "Agent API - Buscar Métricas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent API - Buscar Métricas": {
      "main": [
        [
          {
            "node": "Process Meta Ads Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Meta Ads Data": {
      "main": [
        [
          {
            "node": "Supabase - Insert Metrics",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notion - Insert Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase - Insert Metrics": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion - Insert Record": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2.0.0",
  "tags": [
    {
      "name": "marketing",
      "id": "marketing-tag"
    },
    {
      "name": "meta-ads",
      "id": "meta-tag"
    }
  ]
}

