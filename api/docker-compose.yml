version: '3.8'

services:
  app:
    build: .
    container_name: fbads-api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL:?DATABASE_URL not set}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      N8N_WEBHOOK_URL: ${N8N_WEBHOOK_URL:-http://n8n:5678/webhook}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - fbads-network

  celery_worker:
    build: .
    container_name: fbads-celery-worker
    command: celery -A src.tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      DATABASE_URL: ${DATABASE_URL:?DATABASE_URL not set}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - fbads-network

  celery_beat:
    build: .
    container_name: fbads-celery-beat
    command: celery -A src.tasks.celery_app beat --loglevel=info
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - fbads-network

  flower:
    build: .
    container_name: fbads-flower
    command: celery -A src.tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    env_file:
      - .env
    depends_on:
      - celery_worker
    restart: unless-stopped
    networks:
      - fbads-network

  postgres:
    image: postgres:15-alpine
    container_name: fbads-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-facebook_ads_ai}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - fbads-network

  redis:
    image: redis:7-alpine
    container_name: fbads-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - fbads-network

  n8n:
    image: n8nio/n8n:latest
    container_name: fbads-n8n
    ports:
      - "5678:5678"
    environment:
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:?N8N_BASIC_AUTH_USER not set}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD:?N8N_BASIC_AUTH_PASSWORD not set}
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: ${N8N_WEBHOOK_URL:-http://n8n:5678/}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./config/n8n/workflows:/workflows
    restart: unless-stopped
    networks:
      - fbads-network

  prometheus:
    image: prom/prometheus:latest
    container_name: fbads-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - fbads-network

  grafana:
    image: grafana/grafana:latest
    container_name: fbads-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:?GRAFANA_ADMIN_PASSWORD not set}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - fbads-network

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  prometheus_data:
  grafana_data:

networks:
  fbads-network:
    driver: bridge

